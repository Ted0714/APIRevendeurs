# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


image: mcr.microsoft.com/dotnet/sdk:7.0


stages:
  - build
  - test
  - coverage
  - deploy


variables:
  BUILD_TAGS: "kawa-runner1"
  TEST_TAGS: "kawa-runner2"
  COVERAGE_TAGS: "runner-kawa2"
  DEPLOY_TAGS: "runner-kawa1"


build:
  image: mcr.microsoft.com/dotnet/sdk:7.0
  stage: build
  tags:
    - $BUILD_TAGS
  script:
    - dotnet restore
    - dotnet build --configuration Release
  artifacts:
    paths:
      - ./bin/Debug/net7.0/


test:
  image: mcr.microsoft.com/dotnet/sdk:7.0
  stage: test
  tags:
    - $TEST_TAGS
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - dotnet test --configuration Release --logger "trx;LogFileName=test_results.trx"


coverage:
  image: mcr.microsoft.com/dotnet/sdk:7.0
  stage: coverage
  tags:
    - $COVERAGE_TAGS
  script:
    - dotnet tool install -g dotnet-reportgenerator-globaltool
    - dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/
    - reportgenerator "-reports:TestResults/coverage.cobertura.xml" "-targetdir:TestResults/CoverageReport" "-reporttypes:Html;HtmlSummary"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml


deploy:
  image: mcr.microsoft.com/dotnet/sdk:7.0
  stage: deploy
  tags:
    - $DEPLOY_TAGS
  script:
    - apk update && apk add openssh-client rsync
    - ssh kawa@192.168.37.24 "mkdir -p /var/www/apikawa"
    - rsync -avz --delete ./bin/Release/net7.0/publish/ kawa@192.168.37.24:/var/www/apikawa/
  environment:
    name: production
  only:
    - main

